
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
    
    // tap: sticky shift | double tap: caps_word | hold: shift
    ssd: super_shift_dance {
        compatible = "zmk,behavior-tap-dance";
        label = "SUPER_SHIFT_DANCE";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&sk LSHFT>, <&caps_word>;
    };  
    ss: super_shift {
        compatible = "zmk,behavior-hold-tap";
        label = "SUPER_SHIFT";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "balanced";
        bindings = <&mo>, <&ssd>;
    };
    
    /*
     * mod: CAPS_LOCK | tap: LCTRL | hold: LSHIFT
     * ss: tap_dance_mod_tap {
     *      compatible = "zmk,behavior-tap-dance";
     *      label = "SUPER_SHIFT";
     *      #binding-cells = <0>;
     *      tapping-term-ms = <200>;
     *      quick_tap_ms = <175>;
     *      bindings = <&mt LSHIFT CAPSLOCK>, <&kp LCTRL>;
     *  };
     */
    
    // tap: left | double tap: home | hold: left
    ld: left_dance {
        compatible = "zmk,behavior-mod-tap";
        label = "LEFT_DANCE";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&mt LEFT_ARROW >, <LC(LEFT_ARROW)>;
    };  
  
    // tap: right | double tap: end
    rd: right_dance {
        compatible = "zmk,behavior-mod-tap";
        label = "RIGHT_DANCE";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <RIGHT_ARROW>, <LC(RIGHT_ARROW)>;
    };  
    
    // tap: up | double tap: beginning of file
    ud: up_dance {
        compatible = "zmk,behavior-mod-tap";
        label = "UP_DANCE";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <UP_ARROW>, <LC(UP_ARROW)>;
    };  
    
    // tap: down | double tap: end of file
    dd: down_dance {
        compatible = "zmk,behavior-mod-tap";
        label = "DOWN_DANCE";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <DOWN_ARROW>, <LC(DOWN_ARROW)>;
    };      
    
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp EQUAL     &kp N1      &kp N2  &kp N3         &kp N4          &kp N5                   &kp K_MUTE  &kp C_BRIGHTNESS_AUTO            &kp N6     &kp N7     &kp N8         &kp N9         &kp N0             &kp MINUS
   &kp TAB      &kp Q       &kp W   &kp E          &kp R           &kp T              &kp C_VOLUME_UP   &kp C_BRIGHTNESS_INC             &kp Y      &kp U      &kp I          &kp O          &kp P              &kp BSLH
   &kp ESC      &kp A       &kp S   &kp D          &kp F           &kp G            &kp C_VOLUME_DOWN           &kp LEFT_GUI  &kp LEFT_CONTROL                        &kp RIGHT_ALT  &kp RIGHT_GUI  &kp C_BRIGHTNESS_DEC     &kp H   &kp J      &kp K    &kp L  &kp SEMI  &kp SQT
     &none      &kp Z       &kp X   &kp C          &kp V           &kp B                        &none                  &none    &kp DOWN_ARROW      &none      &none   &kp UP_ARROW          &none                 &none     &kp N   &kp M  &kp COMMA  &kp DOT  &kp FSLH    &none
     &mo 2  &kp GRAVE  &caps_word  &up_dance  &kp LG(SPACE)  &kp LEFT_SHIFT                &kp BACKSPACE         &kp LEFT_ARROW   &kp RIGHT_ARROW  &kp ENTER  &kp SPACE  &kp LG(LC(Q))          &ss              &kp LBKT  &kp RBKT   &mo 3
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4    &kp N5             &trans      &mo 3     &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY   &kp MINUS
   &kp TAB      &kp Q     &kp W     &kp E      &kp R     &kp T              &none      &none      &kp Y   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS    &kp BSLH
   &kp ESC      &kp A     &kp S     &kp D      &kp F     &kp G              &none  &kp LCTRL   &kp LALT                                 &kp LGUI        &kp RCTRL       &none     &kp H  &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_PLUS    &kp SQT
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp V     &kp B              &none      &none   &kp HOME       &none         &none      &kp PG_UP            &none       &none     &kp N  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_ENTER  &kp RSHFT
     &mo 2  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT  &kp BSPC            &kp DEL    &kp END  &kp PG_DN   &kp ENTER     &kp KP_N0         &kp UP         &kp DOWN  &kp KP_DOT  &kp RBKT      &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6            &tog 1   &mo 3  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans                   &trans   &trans    &none  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none   &none  &trans   &none   &none   &trans    &none    &none  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans   &trans   &trans   &trans  &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4                             &none       &trans  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none
  &none         &none         &none         &none         &none            &none                       &bootloader  &bootloader         &none         &none            &none         &none         &none                   &none
  &none         &none         &none         &none         &none            &none            &rgb_ug RGB_MEFS_CMD 5   &bt BT_CLR         &none                                   &bt BT_CLR    &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5   &none   &none   &none   &none   &none   &none
  &none         &none         &none         &none         &none            &none                             &none        &none         &none         &none            &none         &none         &none                   &none   &none   &none   &none   &none   &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC  &rgb_ug RGB_TOG                        &bl BL_TOG        &none         &none    &bl BL_TOG  &rgb_ug RGB_TOG    &bl BL_INC    &bl BL_DEC                   &none   &none   &none
            >;
        };

    };
};
